name: Build and Push Docker Images to ECR

on:
  push:
    branches: [ "*" ]
    tags: [ "*" ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed to fetch full history for diff

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, create ECR repo if needed, and push Docker images
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          # List commits for debugging
          echo "Previous SHA: ${{ github.event.before }}"
          echo "Current SHA: ${{ github.sha }}"

          # Get changed files between last and current commit
          changed_files=$(git diff --name-only "${{ github.event.before }}" "${{ github.sha }}")

          echo "Changed files:"
          echo "$changed_files"

          for dir in */ ; do
            dir=${dir%/}
            # Check if any changed files in this directory
            if echo "$changed_files" | grep -q "^$dir/"; then
              echo "Detected changes in $dir - processing..."

              IMAGE_NAME="$dir"
              ECR_REPO="$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME"

              # Check if ECR repo exists, create if not
              if ! aws ecr describe-repositories --repository-names "$IMAGE_NAME" > /dev/null 2>&1; then
                echo "ECR repository $IMAGE_NAME does not exist. Creating..."
                aws ecr create-repository --repository-name "$IMAGE_NAME" > /dev/null || true
              else
                echo "ECR repository $IMAGE_NAME already exists."
              fi

              # Build and push image
              docker build -f "$dir/Dockerfile" -t "$ECR_REPO" .
              docker push "$ECR_REPO"
            else
              echo "No changes in $dir, skipping build."
            fi
          done
